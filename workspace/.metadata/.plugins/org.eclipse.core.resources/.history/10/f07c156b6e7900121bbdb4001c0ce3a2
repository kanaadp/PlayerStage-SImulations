/*
 * ex0.cc
 *
 *  Created on: Dec 29, 2012
 *      Author: kanaad
 */
#include <stdio.h>

#include <string.h>
#include <iostream>
#include <libplayerc++/playerc++.h>
#include <sstream>
using namespace std;
using namespace PlayerCc;

struct intent {
	int Robotnum;
	int initLane;
	bool turn;
	double leg1;
	double leg2;
	double leg3;
	double turnspeed;
};
/**
 * [0] Robot Num
 * [1] Init Lane
 * 	North = 1
 * 	East = 2
 * 	South = 3
 * 	West = 4
 * [2] Turning
 *  Yes = 1
 *  No = 0
 *  ALL SPEEDS are divided by 100
 * [3] Leg 1 Speed
 * [4] Leg 2 Speed
 * [5] Leg 3 Speed
 * [6] Turning Speed
 */
bool broadcast(BlackBoardProxy * bb, intent *robotintent) {
	char *key = (char *) "myey";
	char *group = (char *) "myGroup";

	cout << "Broadcasting" << "\n";
	player_blackboard_entry_t data;
	stringstream ss;
	ss << robotintent->Robotnum;
	//ss.str().c_str();

	data.data = new uint8_t[1];
	data.data_count = 7;
	data.data[0] = robotintent->Robotnum;
	/*data.data[1] = robotintent.initLane;
	 data.data[2] = robotintent.turn;
	 data.data[3] = robotintent.leg1;
	 data.data[4] = robotintent.leg2;
	 data.data[5] = robotintent.leg3;
	 data.data[6] = robotintent.turnspeed;*/
	data.key = key;
	data.key_count = strlen((const char*) key) + 1;
	;
	data.group = group;
	data.group_count = strlen((const char*) key) + 1;
	;
	time_t rawtime;
	time(&rawtime);
	data.timestamp_sec = rawtime;
	try {
		bb->SetEntry(data);
	} catch (PlayerError pe) {
		cout << "FEHLER: " << pe.GetErrorStr() << endl;
		return false;
	}
	cout << "Broadcasted!" << "\n";
	return true;
}

int main(int argc, char **argv) {
	char *key = (char *) "myey";
	char *group = (char *) "myGroup";

	PlayerClient robot("localhost", 6665);
	BlackBoardProxy bb(&robot, 0);
	intent testintent;
	testintent.Robotnum = 1;
	testintent.initLane = 2;
	testintent.leg1 = .25;
	testintent.leg2 = .25;
	testintent.leg3 = .25;
	testintent.turn = true;
	testintent.turnspeed = .15;
	broadcast(&bb, &testintent);

	/*stringstream ss;
	 ss << testintent.Robotnum;

	 const char *key = (char *) ss.str().c_str();*/
	player_blackboard_entry_t *output;
	try {
		cout << "trying get entry";
		cout.flush();
		output = bb.GetEntry(key, group);
		cout << "I'm here!!";
		cout.flush();
	} catch (PlayerError pe) {
		cout << "FEHLER: " << pe.GetErrorStr() << endl;
		return (-1);
	}
	cout << "asdf" << "\n";
	cout.flush();
	int datacount = output->data_count;
	cout << datacount;
	//printf("%u", output->data[0]);
	/*printf("%u", output->data[1]);
	 printf("%u", output->data[2]);
	 printf("%u", output->data[3]);
	 printf("%u", output->data[4]);
	 printf("%u", output->data[5]);
	 printf("%u", output->data[6]);*/

	cout << "finally....";
	cout.flush();
	return 0;
}
