/*
 * ex0.cc
 *
 *  Created on: Dec 29, 2012
 *      Author: kanaad
 */
#include <stdio.h>
#include <iostream>
#include <libplayerc++/playerc++.h>
using namespace std;
using namespace PlayerCc;
int main(int argc, char *argv[]) {

	double TARGET_X = 1.5;
	double TARGET_Y = -3;
	double FINAL_X = -18;
	try {
		PlayerClient robot("localhost");
		Position2dProxy p2dProxy(&robot, 1);
		robot.Read();
		double robotx = p2dProxy.GetXPos();
		double roboty = p2dProxy.GetYPos();
		double robotyaw = p2dProxy.GetYaw();
		cout << "targetx =" << TARGET_X << "\n";
		cout << "targety =" << TARGET_Y << "\n";
		cout << "robotx =" << robotx << "\n";
		cout << "roboty =" << roboty << "\n";
		cout << "robotyaw =" << robotyaw << "\n";

		while (roboty < TARGET_Y){
			cout << "y movement"<< "\n";
			p2dProxy.SetSpeed(.25, 0, 0);
			robot.Read();
			robotx = p2dProxy.GetXPos();
			roboty = p2dProxy.GetYPos();
			robotyaw = p2dProxy.GetYaw();
		}
		double idealangle = atan2(TARGET_Y - roboty, TARGET_X - robotx);
		while (robotyaw > idealangle) {
			cout << idealangle <<  "\n";
			cout << "yaw movement"<< "\n";
			p2dProxy.SetSpeed(0, 0, .15);
			robot.Read();
			robotx = p2dProxy.GetXPos();
			roboty = p2dProxy.GetYPos();
			robotyaw = p2dProxy.GetYaw();
		}
		cout << "nose";
		while (robotx > TARGET_X) {
			cout << "x movement"<< "\n";
			p2dProxy.SetSpeed(.25, 0, 0);
			robot.Read();
			robotx = p2dProxy.GetXPos();
			roboty = p2dProxy.GetYPos();
			robotyaw = p2dProxy.GetYaw();
		}
		while (robotyaw < M_PI) {
			cout << "yaw movement"<< "\n";
			p2dProxy.SetSpeed(0, 0, .15);
			robot.Read();
			robotx = p2dProxy.GetXPos();
			roboty = p2dProxy.GetYPos();
			robotyaw = p2dProxy.GetYaw();
		}
		while (robotx > FINAL_X) {
			cout << "x movement"<< "\n";
			p2dProxy.SetSpeed(.25, 0, 0);
			robot.Read();
			robotx = p2dProxy.GetXPos();
			roboty = p2dProxy.GetYPos();
			robotyaw = p2dProxy.GetYaw();
		}


	} catch (PlayerCc::PlayerError &e) {
		const char* c = e.GetErrorStr().c_str();
		cout << c;
	}
	cout << "end";
	return 0;
}

