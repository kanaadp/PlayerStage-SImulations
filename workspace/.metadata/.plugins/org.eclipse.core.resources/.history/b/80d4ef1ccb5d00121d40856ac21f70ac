/*
 * ex0.cc
 *
 *  Created on: Dec 29, 2012
 *      Author: kanaad
 */
#include <stdio.h>
#include <iostream>
#include <libplayerc++/playerc++.h>
using namespace std;
using namespace PlayerCc;
int main() {
	bool turn = true;
	double Waypoint1y = -3;

	double Waypoint2y = 1.5;
	double Waypoint2x = -3;
	double FINAL_X = 18;
	try {
		PlayerClient robot("localhost");
		Position2dProxy p2dProxy(&robot, 1);
		robot.Read();
		double robotx = p2dProxy.GetXPos();
		double roboty = p2dProxy.GetYPos();
		double robotyaw = p2dProxy.GetYaw();
		cout << "robotx =" << robotx << "\n";
		cout << "roboty =" << roboty << "\n";
		cout << "robotyaw =" << robotyaw << "\n";
		if (robotx > 3) {
			cout << "A" << "\n";
			//A
		} else if (robotx < 0) {
			cout << "B" << "\n";
			//B
		} else if (robotx < -3) {
			cout << "C" << "\n";

			//D
		} else if (robotx > 0) {
			cout << "D" << "\n";

			if (turn) {
				while (fabs(roboty) > 3.0 || fabs(robotx) > 3.0) {
					cout << "forward movement" << "\n";
					p2dProxy.SetSpeed(.25, 0, 0);
					robot.Read();
					robotx = p2dProxy.GetXPos();
					roboty = p2dProxy.GetYPos();
					robotyaw = p2dProxy.GetYaw();
				}
				cout << Waypoint2y - roboty << "\n";
				cout << Waypoint2x - robotx << "\n";
				double idealangle = atan2(4.5,
						4.5);
				cout << "idang" << idealangle << "\n";
				while (robotyaw < idealangle) {
					cout << "idang" << idealangle << "\n";
					cout << "yaw movement" << "\n";
					p2dProxy.SetSpeed(0, 0, .15);
					robot.Read();
					robotx = p2dProxy.GetXPos();
					roboty = p2dProxy.GetYPos();
					robotyaw = p2dProxy.GetYaw();
				}
				while (robotx > Waypoint2x) {
					cout << "x movement" << "\n";
					p2dProxy.SetSpeed(1.0, 0, 0);
					robot.Read();
					robotx = p2dProxy.GetXPos();
					roboty = p2dProxy.GetYPos();
					robotyaw = p2dProxy.GetYaw();
				}
				while (M_PI - fabs(robotyaw) > .02) {
					cout << "yaw movement" << "\n";
					p2dProxy.SetSpeed(0, 0, .15);
					robot.Read();
					robotx = p2dProxy.GetXPos();
					roboty = p2dProxy.GetYPos();
					robotyaw = p2dProxy.GetYaw();
					cout << M_PI - fabs(robotyaw) << "\n";
				}
				while (robotx > -FINAL_X) {
					cout << "x movement" << "\n";
					p2dProxy.SetSpeed(.25, 0, 0);
					robot.Read();
					robotx = p2dProxy.GetXPos();
					roboty = p2dProxy.GetYPos();
					robotyaw = p2dProxy.GetYaw();
				}
			} else {

			}
		}

	} catch (PlayerCc::PlayerError &e) {
		const char* c = e.GetErrorStr().c_str();
		cout << c;
	}
	cout << "end";
	return 0;
}

